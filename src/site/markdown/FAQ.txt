Frequently Asked Questions (FAQ)
================================

Q: Why do I get a "java.sql.SQLIntegrityConstraintViolationException: ORA-01400: cannot insert NULL" when copying to an Oracle DB?
---------------------

A: Oracle chose for some reason to treat empty strings as NULL 
(See discussion in [stackoverflow](http://stackoverflow.com/questions/203493/why-does-oracle-9i-treat-an-empty-string-as-null)).

There is a way to get around this using a DefaultColumnDataMapperProviderHint:

	connectorRepository.addConnectorHint(TARGET, new DefaultColumnDataMapperProviderHint() {
				protected void addMappings(final DefaultColumnDataMapperProvider columnDataMapperFactory) {
					super.addMappings(columnDataMapperFactory);

					columnDataMapperFactory.addMapping(ColumnType.CLASS_STRING, ColumnType.CLASS_STRING, new ColumnDataMapper() {
						public boolean isApplicable(final ColumnMetaData sourceColumnMetaData, final ColumnMetaData targetColumnMetaData)
								throws SQLException {
							return sourceColumnMetaData.getColumnName().equalsIgnoreCase("MY_COLUMN");
						}

						public Object map(final ColumnMetaData sourceColumnMetaData, final ColumnMetaData targetColumnMetaData, final Object value)
								throws SQLException {
							if ("".equals(value.toString().trim())) {
								return " ";
							} else {
								return value;
							}
						}
					});
				}
			});
			
Q: Why do I get a "java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended" when copying to an Oracle DB?
--------------------------------------------------

A: Well, unfortunately not all DB systems obey the standard and support multiple VALUES clauses in an INSERT statement.
See discussion in [Wikipedia](http://en.wikipedia.org/wiki/Insert_%28SQL%29#Multirow_inserts).

You'll have to limit the number of VALUES clauses to 1 or use the BATCH mode.

	connectorRepository.addConnectorHint(TARGET, new NumberOfRowsPerInsertionHint() {
				public NumberOfRowsPerInsertion getValue() {
					return new NumberOfRowsPerInsertion() {
						public boolean useMultipleValuesClauses(final TableMetaData targetTableMetaData) {
							return false;
						}

						@Override
						public int getNumberOfRowsPerInsertion(final TableMetaData targetTableMetaData) {
							return 2000;
						}
					};
				}
			});

Q: What does an error like "Error Code: 1025. Error on rename of './#sql-ddd_6' to './lokalubi/TABLE' (errno: 150)" mean using MySQL?
--------------------------------------------------

A: Error code 150 refers to foreign key constraints. Since foreign keys are disable during copying this might also be caused by problems with
case-sensitivety. Copying may run well on a Windows system that does not regard case in table names, but fail on Linux, which does. 

You may use a different target configuration to circumvent this problem:

	 connectorRepository.addTargetDatabaseConfiguration(DatabaseType.MYSQL, new MySqlTargetDatabaseConfiguration(connectorRepository, false, 1));
